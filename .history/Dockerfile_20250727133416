# Use Python 3.9 as base image
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Install Chrome dependencies
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    unzip \
    curl \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome via direct download (more reliable for Railway)
RUN cd /tmp \
    && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && apt-get update \
    && apt-get install -y ./google-chrome-stable_current_amd64.deb \
    && rm google-chrome-stable_current_amd64.deb \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* 

# Verify and create symlinks if needed
RUN if [ -f "/usr/bin/google-chrome" ]; then echo "Chrome installed successfully"; else ln -s /usr/bin/google-chrome-stable /usr/bin/google-chrome; fi \
    && google-chrome --version || echo "Chrome not working, will use fallback options"

# Copy requirements first for better layer caching
COPY requirements.txt .

# Update pip and install dependencies
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Fix line endings
RUN apt-get update && apt-get install -y dos2unix

# Copy the rest of the application
COPY . .

# Convert line endings for all Python files
RUN find . -type f -name "*.py" -exec dos2unix {} \;

# Environment variables (will be overridden by Railway)
ENV MONGODB_CONNECTION_STRING="mongodb://mongo:SMhYDmJOIDZMrHqHhVJRIHzxcOfJUaNr@shortline.proxy.rlwy.net:51019"
ENV MONGODB_DATABASE="sneakerbot"
ENV MONGODB_COLLECTION="deals"
ENV EMAIL_NOTIFICATIONS="True"
ENV EMAIL_INTERVAL_MINUTES="30"
ENV EMAIL_RECIPIENTS="papykabukanyi@gmail.com,hoopstar385@gmail.com"

# SMTP Configuration
ENV SMTP_HOST="smtp.gmail.com"
ENV SMTP_PORT="587"
ENV SMTP_USER="papykabukanyi@gmail.com"
ENV SMTP_PASS="lcqowjuwimhsptwq"
ENV EMAIL_FROM="papykabukanyi@gmail.com"

# Headless browser settings
ENV PYTHONUNBUFFERED=1
ENV DISPLAY=:99

# Add healthcheck and entrypoint scripts
COPY docker-healthcheck.sh /usr/local/bin/docker-healthcheck
COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-healthcheck /usr/local/bin/docker-entrypoint.sh
HEALTHCHECK --interval=5m --timeout=10s --start-period=30s --retries=3 CMD [ "docker-healthcheck" ]

# Use our entrypoint script to run the bot with proper validation
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
